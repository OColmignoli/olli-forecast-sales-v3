trigger:
  - main

variables:
  - group: olli-forecast-sales-v3
  - name: dockerRegistryServiceConnection
    value: 'olli-acr-connection'
  - name: imageRepository
    value: 'olli-forecast-sales'
  - name: containerRegistry
    value: 'ollisalesforecast.azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/deployment/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push container image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/deployment'
        Contents: '*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifests'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'OLLI-Azure-Subscription'
              appName: 'olli-forecast-sales'
              containers: $(containerRegistry)/$(imageRepository):$(tag)
